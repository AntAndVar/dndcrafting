{"version":3,"sources":["webpack:///./src/templates/Ingredient.js"],"names":["query","Ingredient","data","pageContext","ingredient","ingredientsJson","recipes","isDesktop","useMediaQuery","title","style","height","fluid","image","childImageSharp","alt","maxHeight","imgStyle","objectFit","rarity","dangerouslySetInnerHTML","__html","description","class","map","item","to","convertToSlug","Item","action","effects","join"],"mappings":"6FAAA,mKAUaA,EAAK,aA+DHC,UA9CI,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACpBC,EAAaF,EAAKG,gBAChBC,EAAYH,EAAZG,QACFC,EAAYC,YAAc,sBAEhC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,MAAOL,EAAWK,OACzB,yBAAKC,MAAO,CAAEC,OAAQJ,EAAY,QAAU,UAC1C,kBAAC,IAAD,CACEK,MAAOR,EAAWS,MAAMC,gBAAgBF,MACxCG,IAAKX,EAAWK,MAChBC,MAAO,CAAEM,UAAW,QACpBC,SAAU,CACRC,UAAW,UACXP,OAAQ,WAId,uCAAaP,EAAWe,QACxB,yBAAKC,wBAAyB,CAAEC,OAAQjB,EAAWkB,eACnD,yBAAKC,MAAM,SACT,uCACA,wBAAIA,MAAM,mBACV,kBAAC,IAAD,KACGjB,GACCA,EAAQkB,KAAI,SAAAC,GAAI,OACd,kBAAC,OAAD,CAAMC,GAAE,YAAcC,wBAAcF,EAAKhB,QACvC,kBAAC,IAAUmB,KAAX,CAAgBC,QAAM,GACpB,yBAAKN,MAAM,wCACT,wBAAIA,MAAM,QAAQE,EAAKhB,QAGzB,yBAAKc,MAAM,wCACT,uCAAaE,EAAKK,QAAQC,KAAK","file":"component---src-templates-ingredient-js-3b3030b564df07ac6639.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport Layout from \"./Layout/\"\r\nimport Article from \"./Article/\"\r\nimport { convertToSlug } from \"../utils/slug\"\r\nimport { useMediaQuery } from \"../utils/mediaQuery\"\r\nimport { ListGroup } from \"react-bootstrap\"\r\n\r\nexport const query = graphql`\r\n  query($title: String!) {\r\n    ingredientsJson(title: { eq: $title }) {\r\n      title\r\n      description\r\n      rarity\r\n      image {\r\n        childImageSharp {\r\n          fluid {\r\n            ...GatsbyImageSharpFluid\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Ingredient = ({ data, pageContext }) => {\r\n  const ingredient = data.ingredientsJson\r\n  const { recipes } = pageContext\r\n  const isDesktop = useMediaQuery(\"(min-width: 500px)\")\r\n\r\n  return (\r\n    <Layout>\r\n      <Article title={ingredient.title}>\r\n        <div style={{ height: isDesktop ? \"400px\" : \"200px\" }}>\r\n          <Image\r\n            fluid={ingredient.image.childImageSharp.fluid}\r\n            alt={ingredient.title}\r\n            style={{ maxHeight: \"100%\" }}\r\n            imgStyle={{\r\n              objectFit: \"contain\",\r\n              height: \"100%\",\r\n            }}\r\n          />\r\n        </div>\r\n        <h4>Rarity: {ingredient.rarity}</h4>\r\n        <div dangerouslySetInnerHTML={{ __html: ingredient.description }} />\r\n        <div class=\"w-100\">\r\n          <h2>Recipes</h2>\r\n          <hr class=\"border-primary\"></hr>\r\n          <ListGroup>\r\n            {recipes &&\r\n              recipes.map(item => (\r\n                <Link to={`/recipes/${convertToSlug(item.title)}`}>\r\n                  <ListGroup.Item action>\r\n                    <div class=\"d-flex w-100 justify-content-between\">\r\n                      <h5 class=\"mb-1\">{item.title}</h5>\r\n                      {/*<small>3 days ago</small>*/}\r\n                    </div>\r\n                    <div class=\"d-flex w-100 justify-content-between\">\r\n                      <p>Effects: {item.effects.join(\",\")}</p>\r\n                    </div>\r\n                  </ListGroup.Item>\r\n                </Link>\r\n              ))}\r\n          </ListGroup>\r\n        </div>\r\n      </Article>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Ingredient\r\n"],"sourceRoot":""}